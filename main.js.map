{"version":3,"sources":["./src/app/pages/my-articles/my-articles.component.html","./src/app/pages/my-articles/my-articles.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/home/home.component.ts","./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/admin-panel/admin-panel.component.html","./src/app/pages/admin-panel/admin-panel.component.ts","./src/app/services/article.service.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/pages/update-article/update-article.component.ts","./src/app/pages/update-article/update-article.component.html","./src/app/guard/auth.guard.ts","./src/app/services/authentication.service.ts","./src/app/pages/create-article/create-article.component.ts","./src/app/pages/create-article/create-article.component.html","./src/app/pages/sign-up/sign-up.component.ts","./src/app/pages/sign-up/sign-up.component.html","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<mat-grid-list cols=\"3\" rowHeight=\"650px\">\n  <mat-grid-tile *ngFor=\"let article of articles\" [colspan]=\"1\" [rowspan]=\"1\">\n    <mat-card class=\"example-card\">\n      <!-- <img\n          mat-card-image\n          src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\n          alt=\"Article\"\n        /> -->\n      <img mat-card-image [src]=\"article?.image\" alt=\"Article\" />\n      <mat-card-content>\n        <mat-card-title>{{ article?.title }}</mat-card-title>\n        <p>\n          {{ article?.description }}\n        </p>\n        <mat-card-subtitle>By {{ article?.owner }}</mat-card-subtitle>\n        <mat-card-subtitle>{{ article?.status }}</mat-card-subtitle>\n      </mat-card-content>\n      <mat-card-actions>\n        <button\n          *ngIf=\"showReApprove(article?.status)\"\n          mat-raised-button\n          color=\"primary\"\n          (click)=\"reApproveArticle(article)\"\n        >\n          RETRY FOR APPROVAL\n        </button>\n        <button\n          mat-stroked-button\n          color=\"warn\"\n          (click)=\"deleteArticle(article)\"\n        >\n          DELETE\n        </button>\n\n        <!-- <button *ngIf=\"isAuthenticated\" mat-button routerLink=\"/update-article\">\n          <mat-icon>note_add</mat-icon>Update Article\n        </button> -->\n        <button\n        mat-stroked-button\n          color=\"black\"\n          >\n          UPDATE\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleModel } from 'src/app/models';\nimport { ArticleService } from 'src/app/services/article.service';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-my-articles',\n  templateUrl: './my-articles.component.html',\n  styleUrls: ['./my-articles.component.css'],\n})\nexport class MyArticlesComponent implements OnInit {\n  articles: ArticleModel[] = [];\n  owner: string = '';\n\n  constructor(private authService: AuthenticationService ,private articleService: ArticleService) {}\n\n  ngOnInit(): void {\n    this.owner = `${this.authService.getCurrentUser().firstName}${this.authService.getCurrentUser().lastName}`;\n    this.updateArticles();\n  }\n\n  updateArticles() {\n    this.articleService.getMyArticles(this.owner).subscribe((aritcleData: any) => {\n      this.articles = aritcleData;\n    });\n  }\n\n  reApproveArticle(article: ArticleModel) {\n    console.log(article);\n    const id = article?._id || '';\n    this.articleService\n      .updateArticleStatus(id, 'PENDING APPROVAL')\n      .subscribe((response) => {\n        console.log('Article Applied for RE-Approval.');\n        this.updateArticles();\n      });\n  }\n\n  deleteArticle(article: ArticleModel) {\n    console.log(article);\n    const id = article?._id || '';\n    this.articleService.deleteArticle(id).subscribe((response) => {\n      console.log('Article Deleted.');\n      this.updateArticles();\n    });\n  }\n\n  // updateArticle(article: ArticleModel) {\n  //   console.log(article);\n  //   const id = article?._id || '';\n  //   this.articleService.updateArticle(id).subscribe((response) => {\n  //     console.log('Article Updated.');\n  //     this.updateArticles();\n  //   });\n  // }\n\n  showReApprove(status: any) {\n    return status?.toUpperCase() == 'DENIED';\n  }\n}\n","<mat-grid-list cols=\"3\" rowHeight=\"500px\">\n  <ng-container *ngFor=\"let article of articles\">\n    <mat-grid-tile\n      *ngIf=\"isArticleApproved(article?.status)\"\n      [colspan]=\"1\"\n      [rowspan]=\"1\"\n    >\n      <mat-card class=\"example-card\">\n        <!-- <img\n          mat-card-image\n          src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\n          alt=\"Article\"\n        /> -->\n        <img mat-card-image [src]=\"article?.image\" alt=\"Article\" />\n        <mat-card-content>\n          <mat-card-title>{{ article?.title }}</mat-card-title>\n          <p>\n            {{ article?.description }}\n          </p>\n          <mat-card-subtitle>By {{ article?.owner }}</mat-card-subtitle>\n        </mat-card-content>\n        <mat-card-actions>\n          <button mat-button>LIKE</button>\n          <button mat-button>SHARE</button>\n        </mat-card-actions>\n      </mat-card>\n    </mat-grid-tile>\n  </ng-container>\n</mat-grid-list>\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleModel } from 'src/app/models';\nimport { ArticleService } from 'src/app/services/article.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  articles: ArticleModel[] = [];\n\n  constructor(private articleService: ArticleService) {}\n\n  ngOnInit(): void {\n    this.articleService.getArticles().subscribe((aritcleData: any) => {\n      this.articles = aritcleData;\n    });\n  }\n\n  isArticleApproved(status: any) {\n    return status?.toUpperCase() == 'APPROVED';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // apiEndpoint: 'http://localhost:3000',\n  apiEndpoint: '/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthModel } from 'src/app/models';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loginInvalid = false;\n  form: FormGroup;\n  returnUrl = '';\n  routeSubscription = new Subscription();\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private authenticationService: AuthenticationService,\n    private router: Router\n  ) {\n    this.form = this.fb.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.routeSubscription = this.route.queryParams.subscribe((params) => {\n      if (params.return_url) {\n        this.returnUrl = params.return_url;\n      } else {\n        this.returnUrl = 'home';\n      }\n    });\n  }\n\n  onSubmit() {\n    this.authenticationService.login(this.form.getRawValue()).subscribe(\n      (response: AuthModel) => {\n        if (response.authenticated) {\n          this.loginInvalid = false;\n          this.authenticationService.isAuthenticated = true;\n          this.authenticationService.isAuthenticatedSubject.next(true);\n          localStorage.setItem('currentUser', JSON.stringify(response?.user));\n          this.router.navigate([this.returnUrl]);\n          this.authenticationService.updateCurrentUser();\n        } else this.loginInvalid = true;\n      },\n      (err: any) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.routeSubscription?.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <h2>Log In</h2>\n      <mat-error *ngIf=\"loginInvalid\">\n        The username and password were not recognized\n      </mat-error>\n      <mat-form-field class=\"full-width-input\">\n        <input matInput placeholder=\"Email\" formControlName=\"email\" required />\n        <mat-error> Please provide a valid email address </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          type=\"password\"\n          placeholder=\"Password\"\n          formControlName=\"password\"\n          required\n        />\n        <mat-error> Please provide a valid password </mat-error>\n      </mat-form-field>\n      <span class=\"button-row\">\n        <button\n          mat-raised-button\n          type=\"submit\"\n          color=\"primary\"\n          [disabled]=\"form.invalid\"\n        >\n          Login\n        </button>\n        <button\n          mat-raised-button\n          type=\"button\"\n          color=\"secondary\"\n          routerLink=\"/sign-up\"\n        >\n          Sign up\n        </button>\n      </span>\n    </form>\n  </mat-card-content>\n</mat-card>\n","<mat-grid-list cols=\"3\" rowHeight=\"650px\">\n  <mat-grid-tile *ngFor=\"let article of articles\" [colspan]=\"1\" [rowspan]=\"1\">\n    <mat-card class=\"example-card\">\n      <!-- <img\n        mat-card-image\n        src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\n        alt=\"Article\"\n      /> -->\n      <img mat-card-image [src]=\"article?.image\" alt=\"Article\" width=\"200\" height=\"400\" />\n      <mat-card-content>\n        <mat-card-title>{{ article?.title }}</mat-card-title>\n        <p>\n          {{ article?.description }}\n        </p>\n        <mat-card-subtitle>By {{ article?.owner }}</mat-card-subtitle>\n        <mat-card-subtitle>{{ article?.status }}</mat-card-subtitle>\n      </mat-card-content>\n      <mat-card-actions>\n        <button\n          *ngIf=\"showApproveDeny(article?.status)\"\n          mat-raised-button\n          color=\"primary\"\n          (click)=\"approveArticle(article)\"\n        >\n          APPROVE\n        </button>\n        <button\n          *ngIf=\"showApproveDeny(article?.status)\"\n          mat-button\n          (click)=\"denyArticle(article)\"\n        >\n          DENY\n        </button>\n        <!-- <button\n         \n          mat-raised-button\n          color=\"primary\"\n          (click)=\"deleteArticle(article)\">\n        \n        DELETE</button> -->\n      </mat-card-actions>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Component, OnInit } from '@angular/core';\nimport { ArticleModel } from 'src/app/models';\nimport { ArticleService } from 'src/app/services/article.service';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css'],\n})\nexport class AdminPanelComponent implements OnInit {\n  articles: ArticleModel[] = [];\n\n  constructor(private articleService: ArticleService) {}\n\n  ngOnInit(): void {\n    this.updateArticles();\n  }\n\n  updateArticles() {\n    this.articleService.getArticles().subscribe((aritcleData: any) => {\n      this.articles = aritcleData;\n    });\n  }\n\n  approveArticle(article: ArticleModel) {\n    console.log(article);\n    const id = article?._id || '';\n    this.articleService\n      .updateArticleStatus(id, 'APPROVED')\n      .subscribe((response) => {\n        console.log('Article Approved.');\n        this.updateArticles();\n      });\n  }\n\n  denyArticle(article: ArticleModel) {\n    console.log(article);\n    const id = article?._id || '';\n    this.articleService\n      .updateArticleStatus(id, 'DENIED')\n      .subscribe((response) => {\n        console.log('Article Denied.');\n        this.updateArticles();\n      });\n  }\n\n  showApproveDeny(status: any) {\n    return status?.toUpperCase() == \"PENDING APPROVAL\";\n  }\n \n  deleteArticle(article: ArticleModel) {\n    console.log(article);\n    const id = article?._id || '';\n    this.articleService.deleteArticle(id).subscribe((response) => {\n      console.log('Article Deleted.');\n      this.updateArticles();\n    });\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ArticleModel } from '../models';\nimport * as buildUrl from 'build-url';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArticleService {\n  constructor(private http: HttpClient) {}\n\n  getArticles() {\n    return this.http.get(`${environment.apiEndpoint}/articles/get-articles`);\n  }\n\n  getMyArticles(owner: string) {\n    const url = buildUrl(\n      `${environment.apiEndpoint}/articles/get-my-articles`,\n      { queryParams: { owner: owner } }\n    );\n    return this.http.get(url);\n  }\n\n  createArticle(articleData: ArticleModel) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.post(\n      `${environment.apiEndpoint}/articles/create-aritcle`,\n      articleData,\n      httpOptions\n    );\n  }\n\n  updateArticle(articleData: ArticleModel) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.post(\n      `${environment.apiEndpoint}/articles/update-aritcle`,\n      articleData,\n      httpOptions\n    );\n  }\n\n  updateArticleStatus(id: string, status: string) {\n    const url = buildUrl(`${environment.apiEndpoint}/articles/update-article`, {\n      queryParams: { id: id, status: status },\n    });\n    return this.http.patch(url, {});\n  }\n\n  deleteArticle(id: string) {\n    const url = buildUrl(`${environment.apiEndpoint}/articles/delete-article`, {\n      queryParams: { id: id },\n    });\n    return this.http.delete(url);\n  }\n}\n","<div class=\"application-bg\">\n  <mat-toolbar color=\"primary\" class=\"expanded-toolbar\">\n    <span>\n      <button mat-button routerLink=\"/home\">{{ title }}</button>\n      \n      <button mat-button routerLink=\"/home\"><mat-icon>home</mat-icon></button>\n        <!-- <span ><h1 routerlink=\"/home\"></h1> Welcome User!!</h1></span> -->\n      <button *ngIf=\"isAuthenticated\" mat-button routerLink=\"/create-article\">\n        <mat-icon>note_add</mat-icon>Create Article\n      </button>\n      <button *ngIf=\"isAuthenticated\" mat-button routerLink=\"/admin-panel\">\n        <mat-icon>assignment_ind</mat-icon>Admin\n      </button>\n      <button *ngIf=\"isAuthenticated\" mat-button routerLink=\"/my-articles\">\n        <mat-icon>view_agenda</mat-icon>My Articles\n      </button>\n      \n    </span>\n    <div class=\"button-group\" fxLayout=\"row\" fxShow=\"false\" fxShow.gt-sm>\n      <button mat-button routerLink=\"/login\" *ngIf=\"!isAuthenticated\">\n        <mat-icon>power_settings_new</mat-icon>\n        Login\n      </button>\n      <div>|</div>\n      <button mat-button routerLink=\"/sign-up\" *ngIf=\"!isAuthenticated\">\n        <mat-icon>note_add</mat-icon>\n        Sign up\n      </button>\n      <button mat-button *ngIf=\"isAuthenticated\" (click)=\"logout()\">\n        <mat-icon>exit_to_app</mat-icon>\n        Logout\n      </button>\n    </div>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n  <div class=\"footer\">\n    <p>HOBBYIST APPLICATION</p>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Hobbyist';\n  isAuthenticated = false;\n\n  constructor(private authService: AuthenticationService) {\n    authService.getAuthenicationStatus().subscribe((value) => {\n      this.isAuthenticated = value;\n    });\n  }\n\n  logout() {\n    const response = this.authService.logout();\n    console.log(response);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { HomeComponent } from './pages/home/home.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { CreateArticleComponent } from './pages/create-article/create-article.component';\nimport { AdminPanelComponent } from './pages/admin-panel/admin-panel.component';\nimport { MyArticlesComponent } from './pages/my-articles/my-articles.component';\nimport { UpdateArticleComponent } from './pages/update-article/update-article.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SignUpComponent,\n    CreateArticleComponent,\n    AdminPanelComponent,\n    MyArticlesComponent,\n    UpdateArticleComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatProgressSpinnerModule,\n    HttpClientModule,\n    MatGridListModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup,Validators } from '@angular/forms';\nimport { ArticleService } from 'src/app/services/article.service';\n@Component({\n  selector: 'app-update-article',\n  templateUrl: './update-article.component.html',\n  styleUrls: ['./update-article.component.css']\n})\nexport class UpdateArticleComponent implements OnInit {\n  form: FormGroup;\n  articleUpdated: boolean = false;\n  constructor(private fb: FormBuilder, private articleService: ArticleService) {\n    this.form = this.fb.group({\n      image: ['', Validators.required],\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      status: [''],\n      owner: [''],\n    });\n  }\n\n\n  \n  ngOnInit(): void {}\n\n  onFormSubmit() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '');\n    this.form.controls['owner'].setValue(\n      currentUser.firstName + currentUser.lastName\n    );\n    this.form.controls['status'].setValue('PENDING APPROVAL');\n    this.articleService.updateArticle(this.form.getRawValue()).subscribe(\n      (response) => {\n        this.articleUpdated = true;\n        this.form.reset();\n      },\n      (err) => {\n        this.articleUpdated = false;\n      }\n    );\n  }\n}","<mat-card>\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\">\n        <!-- <form> -->\n        <h2>Update Article</h2>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            placeholder=\"Image URL\"\n            formControlName=\"image\"\n            required\n          />\n          <mat-error> Image URL is Required </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input matInput placeholder=\"Title\" formControlName=\"title\" required />\n          <mat-error> Title is required </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"full-width-input\">\n          <input\n            matInput\n            placeholder=\"Description\"\n            formControlName=\"description\"\n            required\n          />\n          <mat-error> Description is required </mat-error>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\" mat-button routerLink=\"#\" >\n          Update\n        </button>\n      </form>\n      <p *ngIf=\"articleUpdated\">Article has been Updated!</p>\n    </mat-card-content>\n  </mat-card>\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const data = route?.data;\n    const isAuthenticated = this.authService.isAuthenticated;\n    const currentUser = this.authService.getCurrentUser();\n    if (!isAuthenticated) {\n      this.router.navigate(['/login'], {\n        queryParams: { return_url: state.url },\n      });\n    }\n    if (data?.role_check && currentUser.role != data?.role_required) {\n      return false;\n    }\n    return isAuthenticated;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UserModel } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  public isAuthenticated = false;\n  public isAuthenticatedSubject = new BehaviorSubject(false);\n  private currentUser: UserModel = {};\n\n  constructor(private router: Router, private http: HttpClient) {\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n      this.isAuthenticated = true;\n      this.isAuthenticatedSubject.next(true);\n    } else this.currentUser = {};\n  }\n\n  getAuthenicationStatus() {\n    return this.isAuthenticatedSubject;\n  }\n\n  updateCurrentUser() {\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.currentUser = JSON.parse(userData);\n    } else this.currentUser = {};\n  }\n\n  getCurrentUser() {\n    return this.currentUser;\n  }\n\n  login(credentials: any): any {\n    this.isAuthenticated = false;\n    return this.http.get(\n      `${environment.apiEndpoint}/users/authenticate/${credentials.email}/${credentials.password}`\n    );\n  }\n\n  logout() {\n    this.isAuthenticated = false;\n    this.isAuthenticatedSubject.next(this.isAuthenticated);\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['/login']);\n    return {\n      message: 'User logout successfull!!!',\n      is_authenticated: this.isAuthenticated,\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ArticleService } from 'src/app/services/article.service';\n\n@Component({\n  selector: 'app-create-article',\n  templateUrl: './create-article.component.html',\n  styleUrls: ['./create-article.component.css'],\n})\nexport class CreateArticleComponent implements OnInit {\n  form: FormGroup;\n  articleCreated: boolean = false;\n  constructor(private fb: FormBuilder, private articleService: ArticleService) {\n    this.form = this.fb.group({\n      image: ['', Validators.required],\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      status: [''],\n      owner: [''],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '');\n    this.form.controls['owner'].setValue(\n      currentUser.firstName + currentUser.lastName\n    );\n    this.form.controls['status'].setValue('PENDING APPROVAL');\n    this.articleService.createArticle(this.form.getRawValue()).subscribe(\n      (response) => {\n        this.articleCreated = true;\n        this.form.reset();\n      },\n      (err) => {\n        this.articleCreated = false;\n      }\n    );\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <h2>Create Article</h2>\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          placeholder=\"Image URL\"\n          formControlName=\"image\"\n          required\n        />\n        <mat-error> Image URL is Required </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"full-width-input\">\n        <input matInput placeholder=\"Title\" formControlName=\"title\" required />\n        <mat-error> Title is required </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          placeholder=\"Description\"\n          formControlName=\"description\"\n          required\n        />\n        <mat-error> Description is required </mat-error>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\">\n        Create\n      </button>\n    </form>\n    <p *ngIf=\"articleCreated\">Article has been created!</p>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css'],\n})\nexport class SignUpComponent implements OnInit {\n  form: FormGroup;\n  Roles = [\n    // { value: 'admin', viewValue: 'Admin' },\n    { value: 'artist', viewValue: 'Artist' },\n  ];\n  userCreated: boolean = false;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {\n    this.form = this.fb.group({\n      email: ['', Validators.email],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', Validators.required],\n      role: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.userService.createUser(this.form.getRawValue()).subscribe(\n      (response) => {\n        this.userCreated = true;\n        this.form.reset();\n      },\n      (err) => {\n        this.userCreated = false;\n      }\n    );\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <b><h1 style=\"color:blue;border: brown;\">If you are an Artist please sign up to display your art</h1>\n    \n    </b>  \n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <h2>Sign up</h2>\n      <mat-form-field class=\"full-width-input\">\n        <input matInput placeholder=\"Email\" formControlName=\"email\" required />\n        <mat-error> Please provide a valid email address </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          placeholder=\"First Name\"\n          formControlName=\"firstName\"\n          required\n        />\n        <mat-error> First name is required </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          placeholder=\"Last Name\"\n          formControlName=\"lastName\"\n          required\n        />\n        <mat-error> Last name is required </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"full-width-input\">\n        <input\n          matInput\n          type=\"password\"\n          placeholder=\"Password\"\n          formControlName=\"password\"\n          required\n        />\n        <mat-error> Password is required </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"full-width-input\">\n        <mat-select\n          type=\"text\"\n          placeholder=\"Role\"\n          formControlName=\"role\"\n          required\n        >\n          <mat-option *ngFor=\"let role of Roles\" [value]=\"role.value\">{{\n            role.viewValue\n          }}</mat-option>\n        </mat-select>\n        <mat-error> Role is required </mat-error>\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" [disabled]=\"form.invalid\">\n        Sign up\n      </button>\n    </form>\n    <p *ngIf=\"userCreated\">User has been created!</p>\n  </mat-card-content>\n</mat-card>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { UserModel } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  createUser(userData: UserModel) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    };\n    return this.http.post(\n      `${environment.apiEndpoint}/users/create-user`,\n      userData,\n      httpOptions\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guard/auth.guard';\nimport { AdminPanelComponent } from './pages/admin-panel/admin-panel.component';\nimport { CreateArticleComponent } from './pages/create-article/create-article.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { MyArticlesComponent } from './pages/my-articles/my-articles.component';\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'sign-up',\n    component: SignUpComponent,\n  },\n  {\n    path: 'create-article',\n    component: CreateArticleComponent,\n    canActivate: [AuthGuard],\n    data: {\n      role_check: true,\n      role_required: 'artist',\n    },\n  },\n  {\n    path: 'admin-panel',\n    component: AdminPanelComponent,\n    canActivate: [AuthGuard],\n    data: {\n      role_check: true,\n      role_required: 'admin',\n    },\n  },\n  {\n    path: 'my-articles',\n    component: MyArticlesComponent,\n    canActivate: [AuthGuard],\n    data: {\n      role_check: true,\n      role_required: 'artist',\n    },\n  },\n  {\n    path: '**',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}